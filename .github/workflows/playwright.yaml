name: Playwright Tests

on:
  push:
    branches:
      - main
  pull_request:


jobs:
  test:
    runs-on: macos-latest
    timeout-minutes: 10

    steps:
      # Checkout the repository
      - name: Checkout code
        uses: actions/checkout@v4

      # Setup Node.js and cache dependencies
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '22'

      # Install dependencies using pnpm
      - name: Install dependencies
        run: corepack enable && corepack prepare --activate pnpm@latest

      # Cache pnpm store
      - name: Cache pnpm store
        id: pnpm-cache-path
        run: echo "store-path=$(pnpm store path)" >> $GITHUB_OUTPUT

      - name: Cache pnpm store
        uses: actions/cache@v4
        with:
          path: ${{ steps.pnpm-cache-path.outputs.store-path }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      # Install dependencies using pnpm
      - name: Install dependencies
        run: pnpm install

      # Cache Playwright browsers
      - name: Cache Playwright browsers
        uses: actions/cache@v4
        with:
          path: ~/.cache/ms-playwright
          key: ${{ runner.os }}-playwright-browsers-${{ hashFiles('**/package-lock.json', '**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-playwright-browsers-

      # Install Playwright dependencies
      - name: Install Playwright dependencies
        working-directory: workspaces/test
        run: pnpm exec playwright install chrome

      # Start the web server in the background and wait for it to be ready
      - name: Run Playwright tests
        env:
          TURBO_LOG_ORDER: stream
        run: |
          pnpm start &
          echo "Waiting for server to start..."
          for i in {1..30}; do
            if curl -s http://localhost:8000/favicon.ico >/dev/null; then
              echo "Server is up!"
              break
            fi
            if [ $i -eq 30 ]; then
              echo "Server failed to start"
              exit 1
            fi
            echo "Attempt $i: Server not ready yet..."
            sleep 3
          done
          pnpm test

      # Upload test results as artifact
      - name: Upload test results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: playwright-report
          path: workspaces/test/test-results/
          retention-days: 30